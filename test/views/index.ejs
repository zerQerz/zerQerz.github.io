<!DOCTYPE html>
<html>
  <head>
  	<meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <script src='https://cdn.scaledrone.com/scaledrone.min.js' type='text/javascript'></script>
    <title>WebRTC_talkroom</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <button onclick="support()">监测设备</button>
    
    <style>
        .grayscale {
            -webkit-filter: grayscale(1);
            filter: grayscale(1);
        }
        .sepia {
            -webkit-filter: sepia(1);
            filter: sepia(1);
        }
        .invert {
            -webkit-filter: invert(100);
            filter: invert(100);
        }
        .hue-rotate {
            -webkit-filter: hue-rotate(90deg);
            filter: hue-rotate(90deg);
        }
    </style>
    <style>
        body {
            display: flex;
            height: 100vh;
            margin: 0;
            align-items: center;
            justify-content: center;
            padding: 0 50px;
            font-family: -apple-system, BlinkMacSystemFont, sans-serif;
        }
        video {
            max-width: calc(50% - 100px);
            margin: 0 50px;
            box-sizing: border-box;
            border-radius: 2px;
            padding: 0;
            box-shadow: rgba(156, 172, 172, 0.2) 0px 2px 2px, rgba(156, 172, 172, 0.2) 0px 4px 4px, rgba(156, 172, 172, 0.2) 0px 8px 8px, rgba(156, 172, 172, 0.2) 0px 16px 16px, rgba(156, 172, 172, 0.2) 0px 32px 32px, rgba(156, 172, 172, 0.2) 0px 64px 64px;
        }
        .copy {
            position: fixed;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 16px;
            color: rgba(0, 0, 0, 0.5);
        }
    </style>
    <script type="text/javascript">
    	function support(){
            if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {
                console.log("不支持 enumerateDevices() .");
                return;
            }
            // 列出相机和麦克风.
            navigator.mediaDevices.enumerateDevices()
            .then(function(devices) {
                devices.forEach(function(device) {
                    console.log(device.kind + ": " + device.label +
                                " id = " + device.deviceId);
                });
            })
            .catch(function(err) {
                console.log(err.name + ": " + err.message);
            });
        }
    	
    </script>
  </head>
  <body>
  	<div>
  		<button onclick="showVideo()">打开摄像头</button>
		<button onclick="capture()">拍照</button>
		<button onclick="changeFilter()">滤镜</button>
		<a onclick="toImg()" id="downloadBtn">下载图片</a>
  		<video autoplay="true" controls id="video" muted width="500" height="500"></video>
        <video id="localVideo" autoplay muted></video>
        <video id="remoteVideo" autoplay></video>
  		<canvas id="canvas" ></canvas>
  	</div>
  	<script type="text/javascript">
  		var promise = null;
    	function canGetUserMediaUse() {
        	return !!(navigator.mediaDevices.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);
    	}
    	//打印信息
    	console.log(canGetUserMediaUse());
    	function getUserMedia(constrains,success,error){
            if(navigator.mediaDevices.getUserMedia){
                //最新标准API
                promise = navigator.mediaDevices.getUserMedia(constrains).then(success).catch(error);
            } else if (navigator.webkitGetUserMedia){
                //webkit内核浏览器
                promise = navigator.webkitGetUserMedia(constrains).then(success).catch(error);
            } else if (navigator.mozGetUserMedia){
                //Firefox浏览器
                promise = navagator.mozGetUserMedia(constrains).then(success).catch(error);
            } else if (navigator.getUserMedia){
                //旧版API
                promise = navigator.getUserMedia(constrains).then(success).catch(error);
            }
        }
	    var bol = false;
	    var canvas = document.getElementById('canvas');
	    var video = document.getElementById('video');
	    var downloadBtn = document.getElementById('downloadBtn');
        function showVideo() {
	        if (canGetUserMediaUse()) {
	            getUserMedia({
	                video:true,
	                audio:true
	            },function (stream) {
	                mediaStream = stream;
	                const video = document.getElementById('video');
                    //流的获取
	                video.srcObject = stream;
	                video.play();
	                bol=true;
	            },function (error) {   console.log("访问用户媒体设备失败：",error.name,error.message);      })
	        }else  { alert('您的浏览器不兼容');  }
	    }
	    function capture() {
	        if (promise) {
			  	canvas.width = video.width;
	            canvas.height = video.height;
	            var context = canvas.getContext('2d');
	            context.drawImage(video, 0, 0);
	        }else{
	            alert('请先打开摄像头');
	        }
	    }
	    var filters = ['', 'grayscale', 'sepia', 'invert','hue-rotate'],
            currentFilter = 0;
	    function changeFilter() {
	        currentFilter++;
	        if (currentFilter > filters.length - 1) currentFilter = 0;
	        canvas.className = filters[currentFilter];

	    }
	    function toImg() {
	       var src = canvas.toDataURL("image/png");
	        downloadBtn.href = src;
	        downloadBtn.download = new Date().toLocaleTimeString()
	    }
  	</script>
    <script src="javascripts/webrtc.js"></script>
    <h1>WebRTC_talkroom</h1>
    <p>Welcome to WebRTC_talkroom</p>
  </body>
</html>
